{"version":3,"sources":["components/MenuTabs/MenuTabs.module.scss","components/Chart/Chart.module.scss","components/CoreAdjusterTab/CoreAdjusterTab.module.scss","components/Select/Select.module.scss","components/Input/Input.module.scss","components/Menu/Menu.module.scss","components/Axis/Axis.module.scss","components/App/App.module.scss","types/chart.ts","components/MenuTabs/MenuTabs.tsx","components/CoreAdjusterTab/CoreAdjusterTab.tsx","components/Select/Select.tsx","components/LineAdjusterTab/constants.ts","components/ColorPicker/ColorPicker.tsx","components/Input/Input.tsx","components/LineDataTable/LineDataTable.tsx","components/LineAdjusterTab/LineAdjusterTab.tsx","store/Chart/chartActions.ts","components/Menu/Menu.tsx","store/Chart/chartReducer.ts","store/index.ts","theme.ts","components/Chart/Chart.tsx","helpers/chart.tsx","components/Line/Line.tsx","components/Axis/Axis.tsx","components/SandboxChart/SandboxChart.tsx","hooks/chart.tsx","components/App/App.tsx","index.tsx","components/LineAdjusterTab/LineAdjusterTab.module.scss","components/ColorPicker/ColorPicker.module.scss"],"names":["module","exports","Curve","FillType","AxisType","MenuTabs","props","ref","useRef","selectedTabIdx","useMemo","tabs","findIndex","tab","tabId","selectedTabId","containerWidth","current","getBoundingClientRect","width","className","styles","container","slider","style","transform","map","React","createElement","component","key","CoreAdjusterTab","Select","label","options","value","onChange","disabled","e","target","fullWidth","option","MenuItem","CURVE_SELECTOR_OPTIONS","linear","basis","monotoneX","monotoneY","natural","step","stepBefore","stepAfter","FILL_TYPE_OPTIONS","full","dashArray","ColorPicker","input","Tooltip","interactive","disableFocusListener","disableHoverListener","disableTouchListener","title","color","hex","IconButton","icon","background","Input","useState","currentValue","setCurrentValue","useEffect","event","onFocus","select","onBlur","LineDataTable","data","selectedLine","setSelectedLine","offset","selectedData","setSelectedData","Number","lastOffset","length","lastValue","newData","setNewData","Paper","table","Table","stickyHeader","aria-label","TableHead","TableRow","TableCell","TableBody","idx","defaultValue","type","size","onClick","filter","_","onUpdateData","concat","LineAdjusterTab","useSelector","store","chart","currentLine","lineId","line","lines","find","id","dispatch","useDispatch","onLineChange","useCallback","code","settings","curve","fillType","Button","variant","button","Menu","currentTab","chartLines","tabsMenuItems","forEach","push","Tabs","indicatorColor","textColor","scrollButtons","setCurrentTab","Tab","wrapped","initialState","rootReducer","combineReducers","action","newId","arr","check","createStore","theme","createMuiTheme","overrides","MuiTabs","root","height","scroller","overflowY","MuiTab","wrapper","fontSize","labelIcon","minWidth","textColorPrimary","MuiButton","containedPrimary","backgroundColor","ChartContext","createContext","margin","top","right","bottom","left","boundedWidth","boundedHeight","Chart","dimensions","children","Provider","combineChartDimensions","parsedDimensions","Math","max","Line","xAccessor","yAccessor","curveInterpolation","d3","lineGenerator","x","y","datum","attr","Axis","scale","axisType","ticks","ticksToFixed","tickFormat","tickClassName","tick","useContext","axisGenerator","tickValues","domain","min","isNaN","values","toFixed","ceil","range","getTickValues","axis","call","selectAll","remove","axisLabelTransform","data-testid","fill","textAnchor","SandboxChart","createRef","setWidth","setHeight","resizeObserver","ResizeObserver","entries","contentRect","node","offsetWidth","offsetHeight","observe","unobserve","newSettings","useChartDimensions","xScale","flat","Infinity","yScale","nice","App","isMenuOpen","setMenuOpen","classNames","header","headerShift","menuButton","Drawer","open","anchor","menu","classes","paper","main","mainShift","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.5c90f275.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MenuTabs_container__n1KG1\",\"slider\":\"MenuTabs_slider__RNfST\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3SDj1\",\"chart\":\"Chart_chart__21AJE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CoreAdjusterTab_container__3mmIh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Select_container__14ZIf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Input_container__1fHr_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Menu_container__3OY_Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Axis_label__3WUIH\",\"tick\":\"Axis_tick__22G0b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2i36C\",\"header\":\"App_header__3MgOT\",\"headerShift\":\"App_headerShift__2QOBj\",\"title\":\"App_title__2C-7r\",\"menuButton\":\"App_menuButton__3Kpmo\",\"menu\":\"App_menu__X-A5N\",\"main\":\"App_main__aDOxM\",\"mainShift\":\"App_mainShift__2UwM6\"};","export enum Curve {\n  linear,\n  basis,\n  monotoneX,\n  monotoneY,\n  natural,\n  step,\n  stepBefore,\n  stepAfter,\n}\n\nexport enum FillType {\n  full,\n  dashArray,\n}\n\nexport enum AxisType {\n  'bottom' = 'axisBottom',\n  'left' = 'axisLeft',\n}\n\nexport interface IChartDimensions {\n  width: number;\n  height: number;\n  margin: {\n    top: number;\n    right: number;\n    bottom: number;\n    left: number;\n  };\n  boundedWidth: number;\n  boundedHeight: number;\n}\n\nexport interface IPoint {\n  offset: number;\n  value: number;\n}\n\nexport interface ILine {\n  id: number;\n  label: string;\n  color: string;\n  fillType: FillType;\n  data: IPoint[];\n  curve: Curve;\n}\n","import React, { ReactElement, useMemo, useRef } from 'react';\n\nimport styles from './MenuTabs.module.scss';\n\nexport interface IMenuTab<T = {}> {\n  tabId: number | string;\n  label: string;\n  icon?: ReactElement;\n  component: React.FC<T>;\n  props?: T;\n}\n\ninterface IMenuTabsProps {\n  selectedTabId: number | string;\n  tabs: IMenuTab[];\n}\n\nexport const MenuTabs: React.FC<IMenuTabsProps> = (props) => {\n  const ref = useRef<HTMLDivElement>(null);\n  const selectedTabIdx = useMemo(() => props.tabs.findIndex((tab) => tab.tabId === props.selectedTabId), [\n    props.selectedTabId,\n    props.tabs,\n  ]);\n  const containerWidth = useMemo(() => {\n    if (ref.current) {\n      return ref.current.getBoundingClientRect().width;\n    }\n\n    return 0;\n  }, [ref.current]);\n\n  return (\n    <div className={styles.container} ref={ref}>\n      <div\n        className={styles.slider}\n        style={{\n          transform: `translateX(-${selectedTabIdx * containerWidth}px)`,\n        }}\n      >\n        {props.tabs.map((tab) => React.createElement(tab.component, { ...tab.props, key: tab.tabId }))}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport styles from './CoreAdjusterTab.module.scss';\n\nexport const CoreAdjusterTab: React.FC = () => {\n  return (\n    <div className={styles.container}>\n      <p>Тут будут общие настройки, подписи осей, экспорт/импорт графиков, и т.д.</p>\n    </div>\n  );\n};\n","import React from 'react';\nimport { MenuItem, Select as MSelect } from '@material-ui/core';\n\nimport styles from './Select.module.scss';\n\nexport interface IOption {\n  label: string;\n  value: number | string;\n}\n\ninterface ISelectProps {\n  label: string;\n  options: IOption[];\n  value: number | string;\n  onChange: (value: number | string) => void;\n  disabled?: boolean;\n}\n\nexport const Select: React.FC<ISelectProps> = (props) => {\n  const { label, options, value, onChange, disabled } = props;\n\n  return (\n    <div className={styles.container}>\n      <label>{label}</label>\n      <div>\n        <MSelect\n          value={value}\n          onChange={(e) => onChange(e.target.value as number | string)}\n          fullWidth={true}\n          disabled={disabled}\n        >\n          {options.map((option) => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </MSelect>\n      </div>\n    </div>\n  );\n};\n","import { Curve, FillType } from 'src/types/chart';\nimport { IOption } from 'src/components/Select/Select';\n\nexport const CURVE_SELECTOR_OPTIONS: IOption[] = [\n  {\n    value: Curve.linear,\n    label: 'linear',\n  },\n  {\n    value: Curve.basis,\n    label: 'basis',\n  },\n  {\n    value: Curve.monotoneX,\n    label: 'monotone x',\n  },\n  {\n    value: Curve.monotoneY,\n    label: 'monotone y',\n  },\n  {\n    value: Curve.natural,\n    label: 'natural',\n  },\n  {\n    value: Curve.step,\n    label: 'step',\n  },\n  {\n    value: Curve.stepBefore,\n    label: 'step before',\n  },\n  {\n    value: Curve.stepAfter,\n    label: 'step after',\n  },\n];\n\nexport const FILL_TYPE_OPTIONS: IOption[] = [\n  {\n    value: FillType.full,\n    label: 'заливка',\n  },\n  {\n    value: FillType.dashArray,\n    label: 'пунктир',\n  },\n];\n","import React from 'react';\nimport { IconButton, Tooltip } from '@material-ui/core';\nimport { ChromePicker } from 'react-color';\n\nimport styles from './ColorPicker.module.scss';\n\ninterface IColorPickerProps {\n  label: string;\n  value: string;\n  onChange: (color: string) => void;\n  disabled?: boolean;\n}\n\nexport const ColorPicker: React.FC<IColorPickerProps> = (props) => {\n  const { label, value, onChange, disabled } = props;\n\n  return (\n    <div className={styles.container}>\n      <label className={styles.label}>{label}</label>\n      <div className={styles.input}>\n        <Tooltip\n          interactive={true}\n          disableFocusListener={disabled}\n          disableHoverListener={disabled}\n          disableTouchListener={disabled}\n          title={<ChromePicker color={value} onChange={(color) => onChange(color.hex)} />}\n        >\n          <IconButton disabled={disabled}>\n            <div className={styles.icon} style={{ background: value }} />\n          </IconButton>\n        </Tooltip>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Input as MInput } from '@material-ui/core';\n\nimport styles from './Input.module.scss';\n\ninterface IInputProps {\n  label: string;\n  value: string;\n  onChange: (value: string) => void;\n  disabled?: boolean;\n}\n\nexport const Input: React.FC<IInputProps> = (props) => {\n  const { label, value, onChange, disabled } = props;\n  const [currentValue, setCurrentValue] = useState(props.value);\n\n  useEffect(() => {\n    if (value !== currentValue) {\n      setCurrentValue(props.value);\n    }\n  }, [value]);\n\n  const onLocalChangeHandler: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n    setCurrentValue(event.target.value);\n  };\n  const changeHandler: React.FocusEventHandler<HTMLInputElement> = () => {\n    if (currentValue !== props.value) {\n      onChange(currentValue);\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <label>{label}</label>\n      <div>\n        <MInput\n          value={currentValue}\n          onChange={onLocalChangeHandler}\n          onFocus={(e) => e.target.select()}\n          onBlur={changeHandler}\n          disabled={disabled}\n        />\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport styles from 'src/components/LineAdjusterTab/LineAdjusterTab.module.scss';\nimport {\n  IconButton,\n  Input as MInput,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n} from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport EditIcon from '@material-ui/icons/Edit';\nimport AddIcon from '@material-ui/icons/Add';\nimport { IPoint } from 'src/types/chart';\n\ninterface ILineDataTableProps {\n  data: IPoint[];\n  disabled: boolean;\n  onChange: (data: IPoint[]) => void;\n}\n\nexport const LineDataTable: React.FC<ILineDataTableProps> = (props) => {\n  const { data, onChange, disabled } = props;\n\n  const [selectedLine, setSelectedLine] = useState<null | number>(null);\n\n  const [selectedData, setSelectedData] = useState<IPoint>({\n    offset: 0,\n    value: 0,\n  });\n\n  useEffect(() => {\n    if (Number(selectedLine) === selectedLine) {\n      setSelectedData(data[selectedLine]);\n    }\n  }, [selectedLine]);\n\n  const onUpdateData = () => {\n    // @ts-ignore\n    if (selectedData.offset === '' && selectedData.value === '') {\n      return onChange(data.filter((_, idx) => idx !== selectedLine));\n    }\n\n    onChange(\n      data.map((data, idx) => {\n        if (idx === selectedLine) {\n          return {\n            offset: Number(selectedData.offset),\n            value: Number(selectedData.value),\n          };\n        }\n\n        return data;\n      }),\n    );\n  };\n\n  const lastOffset = useMemo(() => data[data.length - 1]?.offset || 0, [data]);\n  const lastValue = useMemo(() => data[data.length - 1]?.value || 0, [data]);\n\n  const [newData, setNewData] = useState<IPoint>({\n    offset: 0,\n    value: 0,\n  });\n\n  useEffect(() => {\n    setNewData({ offset: lastOffset, value: lastValue });\n  }, [lastOffset, lastValue]);\n\n  const addData = () => {\n    onChange(\n      data.concat({\n        offset: Number(newData.offset),\n        value: Number(newData.value),\n      }),\n    );\n  };\n\n  return (\n    <Paper className={styles.table}>\n      <Table stickyHeader aria-label='sticky table'>\n        <TableHead>\n          <TableRow>\n            <TableCell>Offset</TableCell>\n            <TableCell>Value</TableCell>\n            <TableCell>Edit</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.map(({ offset, value }, idx) => (\n            <TableRow key={idx}>\n              <TableCell>\n                {selectedLine === idx ? (\n                  <MInput\n                    defaultValue={offset}\n                    type={'number'}\n                    value={selectedData.offset}\n                    onFocus={(e) => e.target.select()}\n                    onChange={(e) => setSelectedData({ ...selectedData, offset: e.target.value as any })}\n                  />\n                ) : (\n                  offset\n                )}\n              </TableCell>\n              <TableCell>\n                {selectedLine === idx ? (\n                  <MInput\n                    defaultValue={value}\n                    type={'number'}\n                    value={selectedData.value}\n                    onFocus={(e) => e.target.select()}\n                    onChange={(e) => setSelectedData({ ...selectedData, value: e.target.value as any })}\n                  />\n                ) : (\n                  value\n                )}\n              </TableCell>\n              <TableCell>\n                {selectedLine === idx ? (\n                  <IconButton\n                    size={'small'}\n                    disabled={disabled}\n                    onClick={() => {\n                      setSelectedLine(null);\n                      onUpdateData();\n                    }}\n                  >\n                    <CheckIcon />\n                  </IconButton>\n                ) : (\n                  <IconButton size={'small'} disabled={disabled} onClick={() => setSelectedLine(idx)}>\n                    <EditIcon />\n                  </IconButton>\n                )}\n              </TableCell>\n            </TableRow>\n          ))}\n          {!disabled && (\n            <TableRow>\n              <TableCell>\n                <MInput\n                  defaultValue={lastOffset}\n                  value={newData.offset}\n                  type={'number'}\n                  onFocus={(e) => e.target.select()}\n                  onChange={(e) => setNewData({ ...newData, offset: e.target.value as any })}\n                />\n              </TableCell>\n              <TableCell>\n                <MInput\n                  defaultValue={lastValue}\n                  value={newData.value}\n                  type={'number'}\n                  onFocus={(e) => e.target.select()}\n                  onChange={(e) => setNewData({ ...newData, value: e.target.value as any })}\n                />\n              </TableCell>\n              <TableCell>\n                <IconButton size={'small'} disabled={disabled} onClick={addData}>\n                  <AddIcon />\n                </IconButton>\n              </TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n};\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TAppState } from 'src/types/store';\nimport { ILine } from 'src/types/chart';\nimport { Select } from 'src/components/Select/Select';\nimport { CURVE_SELECTOR_OPTIONS, FILL_TYPE_OPTIONS } from 'src/components/LineAdjusterTab/constants';\nimport { removeLineAction, updateLineAction } from 'src/store/Chart/chartActions';\nimport { ColorPicker } from 'src/components/ColorPicker/ColorPicker';\nimport { Input } from 'src/components/Input/Input';\nimport { LineDataTable } from 'src/components/LineDataTable/LineDataTable';\nimport { Button } from '@material-ui/core';\n\nimport styles from './LineAdjusterTab.module.scss';\n\ninterface ILineAdjusterTab {\n  lineId: number;\n}\n\nexport const LineAdjusterTab: React.FC<ILineAdjusterTab> = (props) => {\n  const disabled = useSelector<TAppState>((store) => store.chart.currentLine !== props.lineId) as boolean;\n  const line = useSelector<TAppState>((store) => store.chart.lines.find((line) => line.id === props.lineId)) as ILine;\n\n  const dispatch = useDispatch();\n  const onLineChange = useCallback(\n    (code: keyof Omit<ILine, 'id'>) =>\n      useCallback((value: any) => dispatch(updateLineAction(line.id, { [code]: value })), [code]),\n    [line.id],\n  );\n  const onRemoveHandler = () => dispatch(removeLineAction(props.lineId));\n\n  return (\n    <div className={styles.container}>\n      <h3>Настройки:</h3>\n      <Input label={'Название:'} value={line.label} onChange={onLineChange('label')} disabled={disabled} />\n      <Select\n        label={'Тип кривой:'}\n        options={CURVE_SELECTOR_OPTIONS}\n        value={line.curve}\n        onChange={onLineChange('curve')}\n        disabled={disabled}\n      />\n      <ColorPicker label={'Цвет линии:'} value={line.color} onChange={onLineChange('color')} disabled={disabled} />\n      <Select\n        label={'Тип заливки:'}\n        options={FILL_TYPE_OPTIONS}\n        value={line.fillType}\n        onChange={onLineChange('fillType')}\n        disabled={disabled}\n      />\n      <Button\n        onClick={onRemoveHandler}\n        type={'button'}\n        color={'primary'}\n        variant={'contained'}\n        className={styles.button}\n      >\n        Удалить\n      </Button>\n      <hr />\n      <h3>Данные:</h3>\n      <LineDataTable data={line.data} onChange={onLineChange('data')} disabled={disabled} />\n    </div>\n  );\n};\n","import { ILine } from 'src/types/chart';\n\nexport const CHANGE_CURRENT_LINE = 'CHANGE_CURRENT_LINE';\nexport const ADD_LINE_ACTION = 'ADD_LINE_ACTION';\nexport const REMOVE_LINE_ACTION = 'REMOVE_LINE_ACTION';\nexport const UPDATE_LINE_ACTION = 'UPDATE_LINE_ACTION';\n\ninterface IChangeCurrentLineAction {\n  type: typeof CHANGE_CURRENT_LINE;\n  id: number | string;\n}\n\nexport const changeCurrentLineAction = (id: number | string): IChangeCurrentLineAction => ({\n  type: CHANGE_CURRENT_LINE,\n  id,\n});\n\ninterface IAddLineAction {\n  type: typeof ADD_LINE_ACTION;\n}\n\nexport const addLineAction = (): IAddLineAction => ({\n  type: ADD_LINE_ACTION,\n});\n\ninterface IRemoveLineAction {\n  type: typeof REMOVE_LINE_ACTION;\n  id: number | string;\n}\n\nexport const removeLineAction = (id: number | string): IRemoveLineAction => ({\n  type: REMOVE_LINE_ACTION,\n  id,\n});\n\ninterface IUpdateLineAction {\n  type: typeof UPDATE_LINE_ACTION;\n  id: number | string;\n  settings: Omit<Partial<ILine>, 'id'>;\n}\n\nexport const updateLineAction = (id: number | string, settings: Omit<Partial<ILine>, 'id'>): IUpdateLineAction => ({\n  type: UPDATE_LINE_ACTION,\n  id,\n  settings,\n});\n\nexport type TChartActions = IChangeCurrentLineAction | IAddLineAction | IRemoveLineAction | IUpdateLineAction;\n","import React, { useMemo } from 'react';\nimport { Tab, Tabs } from '@material-ui/core';\nimport { MenuTabs, IMenuTab } from 'src/components/MenuTabs/MenuTabs';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TAppState } from 'src/types/store';\nimport { CoreAdjusterTab } from 'src/components/CoreAdjusterTab/CoreAdjusterTab';\nimport { LineAdjusterTab } from 'src/components/LineAdjusterTab/LineAdjusterTab';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport AddIcon from '@material-ui/icons/Add';\nimport { addLineAction, changeCurrentLineAction } from 'src/store/Chart/chartActions';\n\nimport styles from './Menu.module.scss';\n\nexport const CORE_PRESETS_ID = 'corePresets';\n\nexport const Menu: React.FC = () => {\n  const { currentLine: currentTab, lines: chartLines } = useSelector<TAppState>(\n    (store) => store.chart,\n  ) as TAppState['chart'];\n  const tabsMenuItems: IMenuTab[] = useMemo(() => {\n    const tabs: IMenuTab[] = [\n      {\n        tabId: CORE_PRESETS_ID,\n        label: 'Настройки',\n        icon: <SettingsIcon />,\n        component: CoreAdjusterTab,\n      },\n    ];\n\n    chartLines.forEach((line) => {\n      tabs.push({\n        tabId: line.id,\n        label: line.label,\n        icon: <TimelineIcon style={{ color: line.color }} />,\n        component: LineAdjusterTab,\n        props: {\n          lineId: line.id,\n        },\n      });\n    });\n\n    return tabs;\n  }, [chartLines]);\n  const dispatch = useDispatch();\n  const setCurrentTab = (tab: number | string) => dispatch(changeCurrentLineAction(tab));\n  const addLineHandler = () => {\n    dispatch(addLineAction());\n  };\n\n  return (\n    <div className={styles.container}>\n      <Tabs\n        value={currentTab}\n        indicatorColor='primary'\n        textColor='primary'\n        variant='scrollable'\n        scrollButtons='on'\n        onChange={(_, tab) => tab && setCurrentTab(tab)}\n      >\n        {tabsMenuItems.map((tab) => (\n          <Tab key={tab.tabId} wrapped={true} icon={tab.icon} label={tab.label} value={tab.tabId} />\n        ))}\n        <Tab key={'add'} icon={<AddIcon />} label={'Добавить'} value={null} onClick={addLineHandler} />\n      </Tabs>\n      <MenuTabs selectedTabId={currentTab} tabs={tabsMenuItems} />\n    </div>\n  );\n};\n","import { Curve, FillType, ILine } from 'src/types/chart';\nimport { CORE_PRESETS_ID } from 'src/components/Menu/Menu';\n\nimport {\n  ADD_LINE_ACTION,\n  CHANGE_CURRENT_LINE,\n  REMOVE_LINE_ACTION,\n  TChartActions,\n  UPDATE_LINE_ACTION,\n} from './chartActions';\n\nexport interface IChartReducerStore {\n  currentLine: number | string;\n  lines: ILine[];\n}\n\nconst initialState: IChartReducerStore = {\n  currentLine: CORE_PRESETS_ID,\n  lines: [],\n};\n\nexport const chartReducer = (store: IChartReducerStore = initialState, action: TChartActions): IChartReducerStore => {\n  switch (action.type) {\n    case CHANGE_CURRENT_LINE:\n      return {\n        ...store,\n        currentLine: action.id,\n      };\n    case ADD_LINE_ACTION: {\n      const newId = (store.lines[store.lines.length - 1]?.id || 0) + 1;\n\n      return {\n        ...store,\n        lines: store.lines.concat({\n          id: newId,\n          color: 'gray',\n          data: [],\n          curve: Curve.linear,\n          label: 'Новая линия',\n          fillType: FillType.full,\n        }),\n        currentLine: newId,\n      };\n    }\n    case REMOVE_LINE_ACTION: {\n      let currentLine: any = CORE_PRESETS_ID;\n      const lines = store.lines.filter((line, idx, arr) => {\n        const check = line.id !== action.id;\n\n        if (check && arr[idx]?.id) {\n          currentLine = arr[idx].id;\n        }\n\n        return check;\n      });\n\n      return {\n        ...store,\n        lines,\n        currentLine,\n      };\n    }\n    case UPDATE_LINE_ACTION:\n      return {\n        ...store,\n        lines: store.lines.map((line) =>\n          line.id === action.id\n            ? {\n                ...line,\n                ...action.settings,\n              }\n            : line,\n        ),\n      };\n    default:\n      return store;\n  }\n};\n","import { combineReducers, createStore } from 'redux';\n\nimport { chartReducer } from './Chart/chartReducer';\n\nexport const rootReducer = combineReducers({\n  chart: chartReducer,\n});\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import { createMuiTheme } from '@material-ui/core';\n\nexport const theme = createMuiTheme({\n  overrides: {\n    MuiTabs: {\n      root: {\n        height: '64px',\n      },\n      scroller: {\n        overflowY: 'hidden',\n      },\n      scrollButtons: {\n        width: '30px',\n      },\n    },\n    MuiTab: {\n      wrapper: {\n        fontSize: '10px',\n      },\n      labelIcon: {\n        minWidth: 'auto',\n      },\n      textColorPrimary: {\n        '&$selected': {\n          color: '#1976d2',\n        },\n      },\n    },\n    MuiButton: {\n      containedPrimary: {\n        backgroundColor: '#1976d2',\n        '&:hover': {\n          backgroundColor: '#1768ba',\n        },\n      },\n    },\n  },\n});\n","import React, { createContext, useContext } from 'react';\nimport { IChartDimensions } from 'src/types/chart';\n\nimport styles from './Chart.module.scss';\n\ninterface IChartProps {\n  dimensions: IChartDimensions;\n}\n\nconst ChartContext = createContext<IChartDimensions>({\n  width: 0,\n  height: 0,\n  margin: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n  },\n  boundedWidth: 0,\n  boundedHeight: 0,\n});\n\nexport const useContextChartDimensions = () => useContext(ChartContext);\n\nexport const Chart: React.FC<IChartProps> = (props) => {\n  const { dimensions, children } = props;\n\n  return (\n    <div className={styles.container}>\n      <svg className={styles.chart}>\n        <g transform={`translate(${dimensions.margin.left}, ${dimensions.margin.top})`}>\n          <ChartContext.Provider value={dimensions}>{children}</ChartContext.Provider>\n        </g>\n      </svg>\n    </div>\n  );\n};\n","import * as d3 from 'd3';\nimport { IChartDimensions } from 'src/types/chart';\n\nexport const combineChartDimensions = (settings: Partial<IChartDimensions>): IChartDimensions => {\n  const parsedDimensions: Omit<IChartDimensions, 'boundedWidth' | 'boundedHeight'> = {\n    margin: {\n      top: 40,\n      right: 30,\n      bottom: 40,\n      left: 75,\n    },\n    width: 0,\n    height: 0,\n    ...settings,\n  };\n\n  return {\n    ...parsedDimensions,\n    boundedWidth: Math.max(parsedDimensions.width - parsedDimensions.margin.left - parsedDimensions.margin.right, 0),\n    boundedHeight: Math.max(parsedDimensions.height - parsedDimensions.margin.top - parsedDimensions.margin.bottom, 0),\n  };\n};\n\ninterface ICrossPointSettings {\n  axis: 'x' | 'y';\n  select: string;\n  position: [number, number];\n}\n\nexport const getCrossPointOnPath = (settings: ICrossPointSettings): SVGPoint => {\n  const { axis, select, position } = settings;\n\n  const path = d3.select(select).node() as SVGPathElement;\n  const length = path.getTotalLength();\n\n  let point;\n  let target;\n  const axisPoint = axis === 'x' ? position[0] : position[1];\n  let beginning = axisPoint;\n  let end = length;\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    target = Math.floor((beginning + end) / 2);\n    point = path.getPointAtLength(target);\n\n    if ((target === end || target === beginning) && point[axis] !== axisPoint) {\n      break;\n    }\n\n    if (point.x > axisPoint) {\n      end = target;\n    } else if (point.x < axisPoint) {\n      beginning = target;\n    } else {\n      break;\n    }\n  }\n\n  return point;\n};\n","import React, { useEffect, useMemo, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { Curve, FillType } from 'src/types/chart';\n\ninterface ILineProps {\n  xAccessor: (data: any) => any;\n  yAccessor: (data: any) => any;\n  data: any[];\n  curve?: Curve;\n  color: string;\n  fillType?: FillType;\n}\n\nexport const Line: React.FC<ILineProps> = (props) => {\n  const { xAccessor, yAccessor, data, color, curve = Curve.linear, fillType = FillType.full } = props;\n  const ref = useRef<SVGPathElement>(null);\n  const curveInterpolation = useMemo(() => {\n    switch (curve) {\n      case Curve.basis:\n        return d3.curveBasis;\n      case Curve.monotoneX:\n        return d3.curveMonotoneX;\n      case Curve.monotoneY:\n        return d3.curveMonotoneY;\n      case Curve.natural:\n        return d3.curveNatural;\n      case Curve.step:\n        return d3.curveStep;\n      case Curve.stepBefore:\n        return d3.curveStepBefore;\n      case Curve.stepAfter:\n        return d3.curveStepAfter;\n      case Curve.linear:\n      default:\n        return d3.curveLinear;\n    }\n  }, [curve]);\n  const lineGenerator = d3.line().curve(curveInterpolation).x(xAccessor).y(yAccessor);\n\n  useEffect(() => {\n    if (ref.current) {\n      d3.select(ref.current)\n        .datum(data)\n        .attr('d', lineGenerator)\n        .attr('fill', 'none')\n        .attr('stroke-width', 2)\n        .attr('stroke', color);\n\n      if (fillType === FillType.dashArray) {\n        d3.select(ref.current).attr('stroke-dasharray', 15);\n      }\n    }\n  }, [ref.current, data, xAccessor, yAccessor]);\n\n  return <path ref={ref} />;\n};\n","import React, { useEffect, useMemo, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { AxisType } from 'src/types/chart';\n\nimport { useContextChartDimensions } from '../Chart/Chart';\n\nimport styles from './Axis.module.scss';\n\ninterface IAxisProps {\n  axisType: AxisType;\n  ticks?: number;\n  ticksToFixed?: number;\n  label?: string;\n  scale: d3.AxisScale<d3.AxisDomain>;\n  tickFormat?: (domainValue: d3.AxisDomain, index: number) => string;\n  tickClassName?: string;\n}\n\n// eslint-disable-next-line sonarjs/cognitive-complexity\nexport const Axis: React.FC<IAxisProps> = (props) => {\n  const { scale, axisType, label, ticks, ticksToFixed = 1, tickFormat, tickClassName = styles.tick } = props;\n  const ref = useRef<SVGPathElement>(null);\n  const dimensions = useContextChartDimensions();\n\n  const getTickValues = (ticks: number) => {\n    const [min, max] = scale.domain() as [number, number];\n\n    if (Number.isNaN(min) || Number.isNaN(max)) {\n      return [];\n    }\n\n    const values: Array<string | number> = [];\n\n    values.push(ticksToFixed ? min.toFixed(ticksToFixed) : Math.ceil(min));\n\n    const range = (max - min) / ticks;\n\n    let currentValue = min + range;\n\n    while (currentValue < max - range / 2) {\n      values.push(Number(ticksToFixed ? currentValue.toFixed(ticksToFixed) : Math.ceil(currentValue)));\n      currentValue += range;\n    }\n\n    values.push(ticksToFixed ? max.toFixed(ticksToFixed) : Math.ceil(max));\n    return values;\n  };\n\n  const axisGenerator = ticks\n    ? d3[axisType](scale).tickValues(getTickValues(ticks)).tickFormat(d3.format(''))\n    : d3[axisType](scale);\n\n  useEffect(() => {\n    tickFormat && axisGenerator.tickFormat(tickFormat);\n\n    if (ref.current) {\n      const axis = d3.select(ref.current).call(axisGenerator);\n\n      axis.selectAll('text').attr('class', tickClassName);\n\n      switch (axisType) {\n        case AxisType.bottom:\n          axis.select('.domain').remove();\n          axis\n            .selectAll('.tick')\n            .select('line')\n            .attr('y2', -dimensions.boundedHeight)\n            .attr('stroke', 'gray')\n            .attr('stroke-dasharray', '1, 3');\n          axis.selectAll('.tick').select('text').attr('transform', 'translate(0, 5)');\n          break;\n        case AxisType.left:\n          axis.select('.domain').remove();\n          axis\n            .selectAll('.tick')\n            .select('line')\n            .attr('x2', dimensions.boundedWidth)\n            .attr('stroke', 'gray')\n            .attr('stroke-dasharray', '1, 3');\n          axis.selectAll('.tick').select('text').attr('transform', 'translate(-10, 0)');\n          break;\n        default:\n          break;\n      }\n    }\n  }, [ref.current, scale, dimensions]);\n\n  const axisLabelTransform = useMemo(() => {\n    switch (axisType) {\n      case AxisType.bottom:\n        return `translate(${dimensions.boundedWidth / 2}, ${dimensions.margin.bottom - 4})`;\n      case AxisType.left:\n        return `translate(${14 - dimensions.margin.left}, ${dimensions.boundedHeight / 2}) rotate(270)`;\n      default:\n        return '';\n    }\n  }, [axisType, dimensions.boundedWidth, dimensions.boundedHeight]);\n\n  return (\n    <g\n      ref={ref}\n      transform={axisType === AxisType.bottom ? `translate(0, ${dimensions.boundedHeight})` : `translate(3, 0)`}\n      data-testid={'axis'}\n    >\n      {label && (\n        <text transform={axisLabelTransform} fill={'black'} textAnchor={'middle'}>\n          {label}\n        </text>\n      )}\n    </g>\n  );\n};\n","import React, { useCallback, useMemo } from 'react';\nimport { Chart } from 'src/components/Chart/Chart';\nimport { useChartDimensions } from 'src/hooks/chart';\nimport { useSelector } from 'react-redux';\nimport { TAppState } from 'src/types/store';\nimport { AxisType, ILine, IPoint } from 'src/types/chart';\nimport { Line } from 'src/components/Line/Line';\nimport * as d3 from 'd3';\nimport { Axis } from 'src/components/Axis/Axis';\n\nexport const SandboxChart: React.FC = () => {\n  const [ref, dimensions] = useChartDimensions({\n    margin: {\n      bottom: 50,\n      right: 50,\n      left: 50,\n      top: 50,\n    },\n  });\n  const lines = useSelector<TAppState>((store) => store.chart.lines) as ILine[];\n  const xAccessor = useCallback((data: IPoint) => data.offset, []);\n  const yAccessor = useCallback((data: IPoint) => data.value, []);\n  const xScale = useMemo(\n    () =>\n      d3\n        .scaleLinear()\n        .domain(d3.extent(lines.map((line) => line.data).flat(Infinity), xAccessor) as [number, number])\n        .range([0, dimensions.boundedWidth]),\n    [lines, dimensions],\n  );\n  const yScale = useMemo(\n    () =>\n      d3\n        .scaleLinear()\n        .domain(d3.extent(lines.map((line) => line.data).flat(Infinity), yAccessor) as [number, number])\n        .nice()\n        .range([dimensions.boundedHeight, 0]),\n    [lines, dimensions],\n  );\n\n  return (\n    <div ref={ref} style={{ width: '100%', height: '100%' }}>\n      <Chart dimensions={dimensions}>\n        <Axis axisType={AxisType.bottom} scale={xScale} />\n        <Axis axisType={AxisType.left} scale={yScale} />\n        {lines.map((line) => (\n          <Line\n            key={line.id}\n            xAccessor={(data) => xScale(xAccessor(data))}\n            yAccessor={(data) => yScale(yAccessor(data))}\n            data={line.data}\n            curve={line.curve}\n            color={line.color}\n            fillType={line.fillType}\n          />\n        ))}\n      </Chart>\n    </div>\n  );\n};\n","import { IChartDimensions } from 'src/types/chart';\nimport { createRef, RefObject, useEffect, useMemo, useState } from 'react';\nimport { combineChartDimensions } from 'src/helpers/chart';\n\nexport const useChartDimensions = (\n  settings?: Partial<IChartDimensions>,\n): [RefObject<HTMLDivElement>, IChartDimensions] => {\n  const ref = createRef<HTMLDivElement>();\n  const dimensions = useMemo(() => combineChartDimensions({ ...settings }), []);\n\n  const [width, setWidth] = useState(dimensions.width);\n  const [height, setHeight] = useState(dimensions.height);\n  const resizeObserver = useMemo(\n    () =>\n      // @ts-ignore\n      new ResizeObserver((entries) => {\n        const chart = entries[0]?.contentRect;\n\n        if (!settings?.width) {\n          setWidth(chart?.width);\n        }\n\n        if (!settings?.height) {\n          setHeight(chart?.height);\n        }\n      }),\n    [],\n  );\n\n  useEffect(() => {\n    const node = ref.current;\n\n    if (node) {\n      setWidth(settings?.width || node.offsetWidth);\n      setHeight(settings?.height || node.offsetHeight);\n      resizeObserver.observe(node);\n    }\n    return () => {\n      if (node) {\n        resizeObserver.unobserve(node);\n      }\n    };\n  }, [ref.current]);\n\n  const newSettings = combineChartDimensions({\n    ...dimensions,\n    width,\n    height,\n  });\n\n  return [ref, newSettings];\n};\n","import React, { useState } from 'react';\nimport { Drawer, IconButton } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CloseIcon from '@material-ui/icons/Close';\nimport classNames from 'classnames';\nimport { SandboxChart } from 'src/components/SandboxChart/SandboxChart';\nimport { Menu } from 'src/components/Menu/Menu';\n\nimport styles from './App.module.scss';\n\nexport const App: React.FC = () => {\n  const [isMenuOpen, setMenuOpen] = useState(false);\n\n  const menuOpenHandler = () => setMenuOpen(!isMenuOpen);\n\n  return (\n    <div className={styles.container}>\n      <header className={classNames(styles.header, { [styles.headerShift]: isMenuOpen })}>\n        <IconButton className={styles.menuButton} onClick={menuOpenHandler}>\n          {isMenuOpen ? <CloseIcon /> : <MenuIcon />}\n        </IconButton>\n        <h1 className={styles.title}>Simple chart editor</h1>\n      </header>\n      <Drawer\n        open={isMenuOpen}\n        anchor={'left'}\n        variant={'persistent'}\n        className={styles.menu}\n        classes={{ paper: styles.menu }}\n      >\n        <Menu />\n      </Drawer>\n      <main className={classNames(styles.main, { [styles.mainShift]: isMenuOpen })}>\n        <SandboxChart />\n      </main>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from 'src/store';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { theme } from 'src/theme';\n\nimport { App } from './components/App/App';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </ThemeProvider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LineAdjusterTab_container__3FAcj\",\"button\":\"LineAdjusterTab_button__2NvwW\",\"table\":\"LineAdjusterTab_table__1hZ5V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ColorPicker_container__349Rz\",\"label\":\"ColorPicker_label__1Ymn9\",\"input\":\"ColorPicker_input__1Qkrd\",\"icon\":\"ColorPicker_icon__2TU7G\"};"],"sourceRoot":""}